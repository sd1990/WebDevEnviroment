<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath*:dataSource.properties" />
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${acquireRetryAttempts}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${breakAfterAcquireFailure}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${testConnectionOnCheckout}</value>
		</property>
		<property name="minPoolSize">
			<value>${minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${maxPoolSize}</value>
		</property>
		<property name="initialPoolSize">
			<value>${initialPoolSize}</value>
		</property>
		<property name="acquireIncrement">
			<value>${acquireIncrement}</value>
		</property>
		<property name="maxIdleTime">
			<value>${maxIdleTime}</value>
		</property>
		<property name="maxStatements">
			<value>${maxStatements}</value>
		</property>
	</bean>

	<bean id="dataSource" parent="parentDataSource">
		<property name="properties" ref="dataSourceProperties" />
	</bean>

	<bean id="dataSourceProperties"
		class="com.vpiaotong.core.utils.security.PropertiesEncryptFactoryBean">
		<property name="properties">
			<props>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/vpiaotong/**/mybatis/*.xml" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.vpiaotong.**.mapper" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" rollback-for="Exception"/>
			<tx:method name="save*" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="select*" read-only="true" rollback-for="Exception" />
			<tx:method name="get*" read-only="true" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* *..service..*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>
